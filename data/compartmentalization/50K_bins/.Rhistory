scale_fill_simpsons() +
labs(x="Number of mapped loci", y="Frequency") +
theme_bw() +
theme(legend.text = element_text(size = 12,face="italic"), legend.title = element_blank(),
axis.text = element_text(size=12), axis.title = element_text(size=15), plot.title = element_text(size = 15)) +
ggtitle("Reads mappability of Emue assemblies estimated with Kmers (K)\nof different length")
sp + facet_grid(. ~ kmer, scales="free", space="free_x") + theme(strip.text.x = element_text(size=15, face="bold"))
dev.off()
png(file='./Emue_mappability_new_genome_5assembl.png', width = 2100, height = 500, res=100)
sp = ggplot(data=melted, aes(x=x, y=value, fill=variable, label=round(value,2))) +
geom_bar(stat="identity", position=position_dodge())+
geom_text(position=position_dodge(width = 0.9), vjust=-0.25, hjust=-0.25, size = 2.8, angle=45) +
scale_fill_simpsons() +
labs(x="Number of mapped loci", y="Frequency") +
theme_bw() +
theme(legend.text = element_text(size = 12,face="italic"), legend.title = element_blank(),
axis.text = element_text(size=12), axis.title = element_text(size=15), plot.title = element_text(size = 15)) +
ggtitle("Reads mappability of Emue assemblies estimated with Kmers (K)\nof different length")
sp + facet_grid(. ~ kmer, scales="free", space="free_x") + theme(strip.text.x = element_text(size=15, face="bold"))
dev.off()
png(file='./Emue_mappability_new_genome_5assembl.png', width = 2000, height = 600, res=100)
sp = ggplot(data=melted, aes(x=x, y=value, fill=variable, label=round(value,2))) +
geom_bar(stat="identity", position=position_dodge())+
geom_text(position=position_dodge(width = 0.9), vjust=-0.25, hjust=-0.25, size = 2.8, angle=45) +
scale_fill_simpsons() +
labs(x="Number of mapped loci", y="Frequency") +
theme_bw() +
theme(legend.text = element_text(size = 12,face="italic"), legend.title = element_blank(),
axis.text = element_text(size=12), axis.title = element_text(size=15), plot.title = element_text(size = 15)) +
ggtitle("Reads mappability of Emue assemblies estimated with Kmers (K)\nof different length")
sp + facet_grid(. ~ kmer, scales="free", space="free_x") + theme(strip.text.x = element_text(size=15, face="bold"))
dev.off()
png(file='./Emue_mappability_new_genome_5assembl.png', width = 2000, height = 600, res=100)
sp = ggplot(data=melted, aes(x=x, y=value, fill=variable, label=round(value,2))) +
geom_bar(stat="identity", position=position_dodge())+
geom_text(position=position_dodge(width = 0.9), vjust=-0.25, hjust=-0.25, size = 2.8, angle=90) +
scale_fill_simpsons() +
labs(x="Number of mapped loci", y="Frequency") +
theme_bw() +
theme(legend.text = element_text(size = 12,face="italic"), legend.title = element_blank(),
axis.text = element_text(size=12), axis.title = element_text(size=15), plot.title = element_text(size = 15)) +
ggtitle("Reads mappability of Emue assemblies estimated with Kmers (K)\nof different length")
sp + facet_grid(. ~ kmer, scales="free", space="free_x") + theme(strip.text.x = element_text(size=15, face="bold"))
dev.off()
png(file='./Emue_mappability_new_genome_5assembl.png', width = 2000, height = 600, res=100)
sp = ggplot(data=melted, aes(x=x, y=value, fill=variable, label=round(value,2))) +
geom_bar(stat="identity", position=position_dodge())+
geom_text(position=position_dodge(width = 0.9), vjust=-0.25, size = 2.8, angle=90) +
scale_fill_simpsons() +
labs(x="Number of mapped loci", y="Frequency") +
theme_bw() +
theme(legend.text = element_text(size = 12,face="italic"), legend.title = element_blank(),
axis.text = element_text(size=12), axis.title = element_text(size=15), plot.title = element_text(size = 15)) +
ggtitle("Reads mappability of Emue assemblies estimated with Kmers (K)\nof different length")
sp + facet_grid(. ~ kmer, scales="free", space="free_x") + theme(strip.text.x = element_text(size=15, face="bold"))
dev.off()
png(file='./Emue_mappability_new_genome_5assembl.png', width = 2000, height = 600, res=100)
sp = ggplot(data=melted, aes(x=x, y=value, fill=variable, label=round(value,2))) +
geom_bar(stat="identity", position=position_dodge())+
geom_text(position=position_dodge(width = 0.9), vjust=-0.25, hjust=-0.15, size = 2.8, angle=90) +
scale_fill_simpsons() +
labs(x="Number of mapped loci", y="Frequency") +
theme_bw() +
theme(legend.text = element_text(size = 12,face="italic"), legend.title = element_blank(),
axis.text = element_text(size=12), axis.title = element_text(size=15), plot.title = element_text(size = 15)) +
ggtitle("Reads mappability of Emue assemblies estimated with Kmers (K)\nof different length")
sp + facet_grid(. ~ kmer, scales="free", space="free_x") + theme(strip.text.x = element_text(size=15, face="bold"))
dev.off()
png(file='./Emue_mappability_new_genome_5assembl.png', width = 2000, height = 600, res=100)
sp = ggplot(data=melted, aes(x=x, y=value, fill=variable, label=round(value,2))) +
geom_bar(stat="identity", position=position_dodge())+
geom_text(position=position_dodge(width = 0.9), vjust=-0.15, hjust=-0.15, size = 2.8, angle=90) +
scale_fill_simpsons() +
labs(x="Number of mapped loci", y="Frequency") +
theme_bw() +
theme(legend.text = element_text(size = 12,face="italic"), legend.title = element_blank(),
axis.text = element_text(size=12), axis.title = element_text(size=15), plot.title = element_text(size = 15)) +
ggtitle("Reads mappability of Emue assemblies estimated with Kmers (K)\nof different length")
sp + facet_grid(. ~ kmer, scales="free", space="free_x") + theme(strip.text.x = element_text(size=15, face="bold"))
dev.off()
png(file='./Emue_mappability_new_genome_5assembl.png', width = 2000, height = 600, res=100)
sp = ggplot(data=melted, aes(x=x, y=value, fill=variable, label=round(value,2))) +
geom_bar(stat="identity", position=position_dodge())+
geom_text(position=position_dodge(width = 0.9), vjust=-0.45, hjust=-0.15, size = 2.8, angle=90) +
scale_fill_simpsons() +
labs(x="Number of mapped loci", y="Frequency") +
theme_bw() +
theme(legend.text = element_text(size = 12,face="italic"), legend.title = element_blank(),
axis.text = element_text(size=12), axis.title = element_text(size=15), plot.title = element_text(size = 15)) +
ggtitle("Reads mappability of Emue assemblies estimated with Kmers (K)\nof different length")
sp + facet_grid(. ~ kmer, scales="free", space="free_x") + theme(strip.text.x = element_text(size=15, face="bold"))
dev.off()
png(file='./Emue_mappability_new_genome_5assembl.png', width = 2000, height = 600, res=100)
sp = ggplot(data=melted, aes(x=x, y=value, fill=variable, label=round(value,2))) +
geom_bar(stat="identity", position=position_dodge())+
geom_text(position=position_dodge(width = 0.9), vjust=-0.5, hjust=-0.15, size = 2.8, angle=90) +
scale_fill_simpsons() +
labs(x="Number of mapped loci", y="Frequency") +
theme_bw() +
theme(legend.text = element_text(size = 12,face="italic"), legend.title = element_blank(),
axis.text = element_text(size=12), axis.title = element_text(size=15), plot.title = element_text(size = 15)) +
ggtitle("Reads mappability of Emue assemblies estimated with Kmers (K)\nof different length")
sp + facet_grid(. ~ kmer, scales="free", space="free_x") + theme(strip.text.x = element_text(size=15, face="bold"))
dev.off()
png(file='./Emue_mappability_new_genome_5assembl.png', width = 2000, height = 600, res=100)
sp = ggplot(data=melted, aes(x=x, y=value, fill=variable, label=round(value,2))) +
geom_bar(stat="identity", position=position_dodge())+
geom_text(position=position_dodge(width = 0.9), vjust=0, hjust=-0.15, size = 2.8, angle=90) +
scale_fill_simpsons() +
labs(x="Number of mapped loci", y="Frequency") +
theme_bw() +
theme(legend.text = element_text(size = 12,face="italic"), legend.title = element_blank(),
axis.text = element_text(size=12), axis.title = element_text(size=15), plot.title = element_text(size = 15)) +
ggtitle("Reads mappability of Emue assemblies estimated with Kmers (K)\nof different length")
sp + facet_grid(. ~ kmer, scales="free", space="free_x") + theme(strip.text.x = element_text(size=15, face="bold"))
dev.off()
png(file='./Emue_mappability_new_genome_5assembl.png', width = 2000, height = 600, res=100)
sp = ggplot(data=melted, aes(x=x, y=value, fill=variable, label=round(value,2))) +
geom_bar(stat="identity", position=position_dodge())+
geom_text(position=position_dodge(width = 0.9), vjust=0.25, hjust=-0.15, size = 2.8, angle=90) +
scale_fill_simpsons() +
labs(x="Number of mapped loci", y="Frequency") +
theme_bw() +
theme(legend.text = element_text(size = 12,face="italic"), legend.title = element_blank(),
axis.text = element_text(size=12), axis.title = element_text(size=15), plot.title = element_text(size = 15)) +
ggtitle("Reads mappability of Emue assemblies estimated with Kmers (K)\nof different length")
sp + facet_grid(. ~ kmer, scales="free", space="free_x") + theme(strip.text.x = element_text(size=15, face="bold"))
dev.off()
png(file='./Emue_mappability_new_genome_5assembl.png', width = 2000, height = 700, res=100)
sp = ggplot(data=melted, aes(x=x, y=value, fill=variable, label=round(value,2))) +
geom_bar(stat="identity", position=position_dodge())+
geom_text(position=position_dodge(width = 0.9), vjust=0.25, hjust=-0.15, size = 2.8, angle=90) +
scale_fill_simpsons() +
labs(x="Number of mapped loci", y="Frequency") +
theme_bw() +
theme(legend.text = element_text(size = 12,face="italic"), legend.title = element_blank(),
axis.text = element_text(size=12), axis.title = element_text(size=15), plot.title = element_text(size = 15)) +
ggtitle("Reads mappability of Emue assemblies estimated with Kmers (K)\nof different length")
sp + facet_grid(. ~ kmer, scales="free", space="free_x") + theme(strip.text.x = element_text(size=15, face="bold"))
dev.off()
###
library("GenomicRanges")
library("GenomicAlignments")
library("Rsamtools")
library("plyr")
setwd("/home/iana/cluster/ikim/")
## Rsamtools load bam file
### 75 bp
file75 = BamFile("./proj/hic_emue/sally_hic/chicago/map/chicago_75_1.Aligned.sortedByCoord.out.bam",
index = "./proj/hic_emue/sally_hic/chicago/map/chicago_75_1.Aligned.sortedByCoord.out.bam.bai")
bp75 = readGAlignments(file75)
## Rsamtools load bam file
### 75 bp
file75 = BamFile("./proj/hic/emue/sally_hic/chicago/map/chicago_75_1.Aligned.sortedByCoord.out.bam",
index = "./proj/hic_emue/sally_hic/chicago/map/chicago_75_1.Aligned.sortedByCoord.out.bam.bai")
bp75 = readGAlignments(file75)
## Rsamtools load bam file
### 75 bp
file75 = BamFile("./proj/hic/emue/sally_hic/chicago/map/chicago_75_1.Aligned.sortedByCoord.out.bam",
index = "./proj/hic/emue/sally_hic/chicago/map/chicago_75_1.Aligned.sortedByCoord.out.bam.bai")
bp75 = readGAlignments(file75)
bp75_coverage = coverage(bp75)
rm(bp75)
bp0_75 = bp75_coverage[bp75_coverage == 0]  # only 0 coverage
bp0_75
bp75_coverage@listData$scaffold_0001
shasta = read.csv("./proj/hic/emue/new_genome_test/star_assemblies/sally_rep1_75.Aligned.sortedByCoord.out.genomecov.bed.merge",
sep = "/t", header=F, stringsAsFactors = F)
shasta = read.csv("./proj/hic/emue/new_genome_test/star_assemblies/sally_rep1_75.Aligned.sortedByCoord.out.genomecov.bed.merge",
sep = "\t", header=F, stringsAsFactors = F)
View(shasta)
shasta$length = shasta$V3 - shasta$V2
summary(shasta$length)
shasta0 = read.csv("./proj/hic/emue/new_genome_test/star_assemblies/sally_rep1_75.Aligned.sortedByCoord.out.genomecov.ZeroCovered.bed.merge",
sep = "\t", header=F, stringsAsFactors = F)
View(shasta0)
shasta0$length = shasta0$V3 - shasta0$V2
summary(shasta0$length)
df=t(summary(shasta0$length))
df=summary(shasta0$length)
df
df = as.data.frame(summary(shasta0$length))
### Old genome
old = read.csv("./proj/hic/emue/new_genome_test/star_assemblies/old_genome_75.Aligned.sortedByCoord.out.genomecov.Covered.bed.merge",
sep = "\t", header=F, stringsAsFactors = F)
old$length = old$V3 - old$V2
summary(old$length)
old0 = read.csv("./proj/hic/emue/new_genome_test/star_assemblies/old_genome_75.Aligned.sortedByCoord.out.genomecov.ZeroCovered.bed.merge",
sep = "\t", header=F, stringsAsFactors = F)
old0$length = old0$V3 - old0$V2
summary(old0$length)
hist(shasta$length)
plot(shasta$length)
hist(shasta$length)
ggplot(shasta, aes(x=shasta$length)) +
+ geom_freqpoly(binwidth = 1.2, size = 0.8)
ggplot(shasta, aes(x=shasta$length)) +
geom_freqpoly(binwidth = 1.2, size = 0.8)
ggplot(shasta, aes(x=shasta$length)) +
geom_freqpoly(binwidth = 1.2, size = 0.8) +
scale_x_log10()
ggplot(shasta, aes(x=shasta$length)) +
geom_freqpoly(binwidth = 1.2, size = 0.8) +
geom_freqpoly(aes(old$length), binwidth = 1.2, size = 0.8) +
scale_x_log10()
summary(old$length)
View(old)
double = read.csv("./proj/hic/emue/new_genome_test/star_assemblies/sally_rep1_75_shasta_multimap_N2.map",
sep = "\t", header = F, stringsAsFactors = F)
View(double)
ag = aggregate(.~V1, double, paste, collapse = ":")
library("ggplot2")
install.packages("ggplot2")
library("ggplot2")
library("ggpubr")
install.packages(ggpurb)
install.packages(ggpubr)
install.packages("ggpubr"
)
library("rtracklayer")
install.packages("rtracklayer")
library("ggplots2")
library("ggplot2")
library(ggplot2)
library("ggplot2")
gtf = import("~/cluster/ikim/proj/hic/00_Genome/Mlei_genome_data_HiC/Annotation_Alex/Annotation/Mnemiopsis_newgenome.20220815.v2.renamed.gff3")
library(rtracklayer)
gtf = import("~/cluster/ikim/proj/hic/00_Genome/Mlei_genome_data_HiC/Annotation_Alex/Annotation/Mnemiopsis_newgenome.20220815.v2.renamed.gff3")
gtf
gene = gtf[gtf$type=="gene"]
################ 5K bins
################
setwd("~/OneDrive/VStudio_code/3D_genome/data/compartmentalization/5K_bins/")
filepath <- Sys.glob("*B-A.tsv")
c_score5K <- do.call(rbind, lapply(filepath, function(x) {
df <- read.csv(x, sep = "\t", header = FALSE, stringsAsFactors = FALSE, row.names = NULL)
df <- df[c(-1, -40), c(-1, -40)]
BB <- sum(df[1:8, 1:8])
AA <- sum(df[31:38, 31:38])
AB <- sum(df[1:8, 31:38])
BA <- sum(df[31:38, 1:8])
total <- (AA + BB) / (AB + BA)
totalA <- (AA) / (AB + BA)
totalB <- (BB) / (AB + BA)
total_df <- data.frame("AA" = totalA,
"BB" = totalB,
"species" = gsub("_.*", "", x),
"AA_percent" = totalA * 100 / total,
"BB_percent" = totalB * 100 / total)
total_df
}))
View(c_score5K)
c_score5K_m <- melt(c_score5K[,1:3])
names(c_score5K_m)[3] <- "5K"
label5K <- melt(c_score5K[,3:5])
label5K$variable <- gsub("_percent", "", label5K$variable)
names(label5K)[3] <- "5K"
library("reshape2")
c_score5K_m <- melt(c_score5K[,1:3])
names(c_score5K_m)[3] <- "5K"
label5K <- melt(c_score5K[,3:5])
label5K$variable <- gsub("_percent", "", label5K$variable)
names(label5K)[3] <- "5K"
################ 10K bins
################
setwd("~/OneDrive/VStudio_code/3D_genome/data/compartmentalization/10K_bins/")
filepath <- Sys.glob("*B-A.tsv")
c_score10K <- do.call(rbind, lapply(filepath, function(x) {
df <- read.csv(x, sep = "\t", header = FALSE, stringsAsFactors = FALSE, row.names = NULL)
df <- df[c(-1, -40), c(-1, -40)]
BB <- sum(df[1:8, 1:8])
AA <- sum(df[31:38, 31:38])
AB <- sum(df[1:8, 31:38])
BA <- sum(df[31:38, 1:8])
total <- (AA + BB) / (AB + BA)
totalA <- (AA) / (AB + BA)
totalB <- (BB) / (AB + BA)
total_df <- data.frame("AA" = totalA,
"BB" = totalB,
"species" = gsub("_.*", "", x),
"AA_percent" = totalA * 100 / total,
"BB_percent" = totalB * 100 / total)
total_df
}))
c_score10K_m <- melt(c_score10K[,1:3])
names(c_score10K_m)[3] <- "10K"
label10K <- melt(c_score10K[,3:5])
label10K$variable <- gsub("_percent", "", label10K$variable)
names(label10K)[3] <- "10K"
################ 20K bins
################
setwd("./data/compartmentalization/20K_bins/")
################ 20K bins
################
setwd("~/OneDrive/VStudio_code/3D_genome/data/compartmentalization/20K_bins/")
filepath <- Sys.glob("*B-A.tsv")
c_score20K <- do.call(rbind, lapply(filepath, function(x) {
df <- read.csv(x, sep = "\t", header = FALSE, stringsAsFactors = FALSE, row.names = NULL)
df <- df[c(-1, -40), c(-1, -40)]
BB <- sum(df[1:8, 1:8])
AA <- sum(df[31:38, 31:38])
AB <- sum(df[1:8, 31:38])
BA <- sum(df[31:38, 1:8])
total <- (AA + BB) / (AB + BA)
totalA <- (AA) / (AB + BA)
totalB <- (BB) / (AB + BA)
total_df <- data.frame("AA" = totalA,
"BB" = totalB,
"species" = gsub("_.*", "", x),
"AA_percent" = totalA * 100 / total,
"BB_percent" = totalB * 100 / total)
total_df
}))
c_score20K_m <- melt(c_score20K[,1:3])
names(c_score20K_m)[3] <- "20K"
label20K <- melt(c_score20K[,3:5])
label20K$variable <- gsub("_percent", "", label20K$variable)
names(label20K)[3] <- "20K"
################ 50K bins
################
setwd("~/OneDrive/VStudio_code/3D_genome/data/compartmentalization/50K_bins/")
filepath <- Sys.glob("*B-A.tsv")
c_score50K <- do.call(rbind, lapply(filepath, function(x) {
df <- read.csv(x, sep = "\t", header = FALSE, stringsAsFactors = FALSE, row.names = NULL)
df <- df[c(-1, -40), c(-1, -40)]
BB <- sum(df[1:8, 1:8])
AA <- sum(df[31:38, 31:38])
AB <- sum(df[1:8, 31:38])
BA <- sum(df[31:38, 1:8])
total <- (AA + BB) / (AB + BA)
totalA <- (AA) / (AB + BA)
totalB <- (BB) / (AB + BA)
total_df <- data.frame("AA" = totalA,
"BB" = totalB,
"species" = gsub("_.*", "", x),
"AA_percent" = totalA * 100 / total,
"BB_percent" = totalB * 100 / total)
total_df
}))
c_score50K_m <- melt(c_score50K[,1:3])
names(c_score50K_m)[3] <- "50K"
label50K <- melt(c_score50K[,3:5])
label50K$variable <- gsub("_percent", "", label50K$variable)
names(label50K)[3] <- "50K"
## Join all dataframes
p1 <- join_all(list(c_score5K_m, c_score10K_m, c_score20K_m, c_score50K_m),
by = c("species", "variable"), type = "full")
p1_sum <- aggregate(. ~ species, p1[,-2], sum)
p1_sum_melt <- melt(p1_sum, id.vars = "species")
library("plyr")
## Join all dataframes
p1 <- join_all(list(c_score5K_m, c_score10K_m, c_score20K_m, c_score50K_m),
by = c("species", "variable"), type = "full")
p1_sum <- aggregate(. ~ species, p1[,-2], sum)
p1_sum_melt <- melt(p1_sum, id.vars = "species")
unique(p1_sum_melt$species)
p1_sum_melt$species <- factor(p1_sum_melt$species,
levels = c("sarc", "cowc", "sros", "mlei", "emue", "tadh", "nvec", "dmel", "hsap"),
labels = c("Sarc", "Cowc", "Sros", "Mlei", "Emue", "Tadh", "Nvec", "Dmel", "Hsap"))
p1_sum_melt$variable <- factor(p1_sum_melt$variable,
levels = c("5K", "10K", "20K", "50K"),
labels = c("5,000 bins", "10,000 bins", "20,000 bins", "50,000 bins"))
## Calculate standart deviation error bars
bars <- aggregate(. ~ species, p1_sum_melt[,-2], function(x) c(mean = mean(x), sd = sd(x)))
bars_value <- unlist(bars$value)
error_bars <-data.frame("species" = bars$species, "mean" = bars_value[,1], "sd" = bars_value[,2])
## Plot compartment strength
ggplot(p1_sum_melt, aes(x=species, y=value, color = variable)) +
geom_jitter(position=position_jitter(w=0.1, h=0.2), size = 2) +
geom_point(data=error_bars, aes(x=species, y=mean), colour="black") +
geom_errorbar(data = error_bars,
mapping = aes(x = species, y = mean, ymin = mean - sd, ymax = mean + sd),
colour="black", width=.1) +
scale_color_grey() +
scale_x_discrete(guide = "prism_offset") +
scale_y_continuous(guide = "prism_offset", limits = c(1.0, 2.5)) +
labs(x = "", y = "Compartment strength\n(AA+BB) / (AB+BA)") +
theme_prism(base_line_size = 0.5, base_family = "sans", base_fontface = "plain") +
theme(axis.line.y = element_line(),
text = element_text(size = 12), axis.text.x = element_text(angle = 30),
legend.title = element_blank(), legend.text = element_text(margin = margin(r = 10)),
plot.margin = unit(c(0.5,0.5,0,0), "cm"))
library("ggplot2")
## Plot compartment strength
ggplot(p1_sum_melt, aes(x=species, y=value, color = variable)) +
geom_jitter(position=position_jitter(w=0.1, h=0.2), size = 2) +
geom_point(data=error_bars, aes(x=species, y=mean), colour="black") +
geom_errorbar(data = error_bars,
mapping = aes(x = species, y = mean, ymin = mean - sd, ymax = mean + sd),
colour="black", width=.1) +
scale_color_grey() +
scale_x_discrete(guide = "prism_offset") +
scale_y_continuous(guide = "prism_offset", limits = c(1.0, 2.5)) +
labs(x = "", y = "Compartment strength\n(AA+BB) / (AB+BA)") +
theme_prism(base_line_size = 0.5, base_family = "sans", base_fontface = "plain") +
theme(axis.line.y = element_line(),
text = element_text(size = 12), axis.text.x = element_text(angle = 30),
legend.title = element_blank(), legend.text = element_text(margin = margin(r = 10)),
plot.margin = unit(c(0.5,0.5,0,0), "cm"))
library("ggprism")
## Plot compartment strength
ggplot(p1_sum_melt, aes(x=species, y=value, color = variable)) +
geom_jitter(position=position_jitter(w=0.1, h=0.2), size = 2) +
geom_point(data=error_bars, aes(x=species, y=mean), colour="black") +
geom_errorbar(data = error_bars,
mapping = aes(x = species, y = mean, ymin = mean - sd, ymax = mean + sd),
colour="black", width=.1) +
scale_color_grey() +
scale_x_discrete(guide = "prism_offset") +
scale_y_continuous(guide = "prism_offset", limits = c(1.0, 2.5)) +
labs(x = "", y = "Compartment strength\n(AA+BB) / (AB+BA)") +
theme_prism(base_line_size = 0.5, base_family = "sans", base_fontface = "plain") +
theme(axis.line.y = element_line(),
text = element_text(size = 12), axis.text.x = element_text(angle = 30),
legend.title = element_blank(), legend.text = element_text(margin = margin(r = 10)),
plot.margin = unit(c(0.5,0.5,0,0), "cm"))
## Plot compartment strength
ggplot(p1_sum_melt, aes(x=species, y=value, color = variable)) +
geom_jitter(position=position_jitter(w=0.1, h=0.1), size = 2) +
geom_point(data=error_bars, aes(x=species, y=mean), colour="black") +
geom_errorbar(data = error_bars,
mapping = aes(x = species, y = mean, ymin = mean - sd, ymax = mean + sd),
colour="black", width=.1) +
scale_color_grey() +
scale_x_discrete(guide = "prism_offset") +
scale_y_continuous(guide = "prism_offset", limits = c(1.0, 2.5)) +
labs(x = "", y = "Compartment strength\n(AA+BB) / (AB+BA)") +
theme_prism(base_line_size = 0.5, base_family = "sans", base_fontface = "plain") +
theme(axis.line.y = element_line(),
text = element_text(size = 12), axis.text.x = element_text(angle = 30),
legend.title = element_blank(), legend.text = element_text(margin = margin(r = 10)),
plot.margin = unit(c(0.5,0.5,0,0), "cm"))
## A and B ratio
################
ratio <- join_all(list(label5K, label10K, label20K, label50K),
by = c("species", "variable"), type = "full")
ratio <- melt(ratio, id.vars = c("species", "variable"))
ratio_ag <- aggregate(value ~ ., ratio[,-3], mean)
ratio_ag$species <- factor(ratio_ag$species,
levels = c("sarc", "cowc", "sros", "mlei", "emue", "tadh", "nvec", "dmel", "hsap"),
labels = c("Sarc", "Cowc", "Sros", "Mlei", "Emue", "Tadh", "Nvec", "Dmel", "Hsap"))
ggplot(ratio_ag, aes(x=species, y=value,fill = variable)) +
geom_bar(position="dodge", stat="identity") +
geom_text(aes(label=round(value,0)), hjust=0.5, vjust=-1.4,
colour="black", size = 6, angle=0, position = position_dodge(.9)) +
scale_fill_manual(values = c("#f56652", "#0060d2")) +
labs(x = "", y = "% of total") +
scale_y_continuous(guide = "prism_offset", trans = "reverse", breaks = c(0,60),labels = c(0,60)) +
theme_prism(base_line_size = 0.5, base_family = "sans", base_fontface = "plain") +
theme(axis.line.x = element_blank(), axis.line.y = element_line(), axis.ticks.x = element_blank(),
text = element_text(size = 12), axis.text.x = element_blank(),
legend.title = element_blank(), legend.text = element_text(margin = margin(r = 10)), legend.position = "bottom",
plot.margin = unit(c(0.5,0.5,0,0), "cm")) +
guides(fill = guide_legend(reverse = FALSE))
## Plot compartment strength
ggplot(p1_sum_melt, aes(x=species, y=value, color = variable)) +
geom_jitter(position=position_jitter(w=0.1, h=0.1), size = 2) +
geom_point(data=error_bars, aes(x=species, y=mean), colour="black") +
geom_errorbar(data = error_bars,
mapping = aes(x = species, y = mean, ymin = mean - sd, ymax = mean + sd),
colour="black", width=.1) +
scale_color_grey() +
scale_x_discrete(guide = "prism_offset") +
scale_y_continuous(guide = "prism_offset", limits = c(1.0, 2.5)) +
labs(x = "", y = "Compartment strength\n(AA+BB) / (AB+BA)") +
theme_prism(base_line_size = 0.5, base_family = "sans", base_fontface = "plain") +
theme(axis.line.y = element_line(),
text = element_text(size = 12), axis.text.x = element_text(angle = 90),
legend.title = element_blank(), legend.text = element_text(margin = margin(r = 10)),
plot.margin = unit(c(0.5,0.5,0,0), "cm"))
## Plot compartment strength
ggplot(p1_sum_melt, aes(x=species, y=value, color = variable)) +
geom_jitter(position=position_jitter(w=0.1, h=0.1), size = 2) +
geom_point(data=error_bars, aes(x=species, y=mean), colour="black") +
geom_errorbar(data = error_bars,
mapping = aes(x = species, y = mean, ymin = mean - sd, ymax = mean + sd),
colour="black", width=.1) +
scale_color_grey() +
scale_x_discrete(guide = "prism_offset") +
scale_y_continuous(guide = "prism_offset", limits = c(1.0, 2.5)) +
labs(x = "", y = "Compartment strength\n(AA+BB) / (AB+BA)") +
theme_prism(base_line_size = 0.5, base_family = "sans", base_fontface = "plain") +
theme(axis.line.y = element_line(),
text = element_text(size = 12), axis.text.x = element_text(),
legend.title = element_blank(), legend.text = element_text(margin = margin(r = 10)),
plot.margin = unit(c(0.5,0.5,0,0), "cm"))
ggplot(ratio_ag, aes(x=species, y=value,fill = variable)) +
geom_bar(position="dodge", stat="identity") +
geom_text(aes(label=round(value,0)), hjust=0.5, vjust=-1.4,
colour="black", size = 6, angle=0, position = position_dodge(.9)) +
scale_fill_manual(values = c("#f56652", "#0060d2")) +
labs(x = "", y = "% of total") +
scale_y_continuous(guide = "prism_offset", trans = "reverse", breaks = c(0,60),labels = c(0,60)) +
theme_prism(base_line_size = 0.5, base_family = "sans", base_fontface = "plain") +
theme(axis.line.x = element_blank(), axis.line.y = element_line(),
text = element_text(size = 12), axis.text.x = element_blank(),
legend.title = element_blank(), legend.text = element_text(margin = margin(r = 10)), legend.position = "bottom",
plot.margin = unit(c(0.5,0.5,0,0), "cm")) +
guides(fill = guide_legend(reverse = FALSE))
ggplot(ratio_ag, aes(x=species, y=value,fill = variable)) +
geom_bar(position="dodge", stat="identity") +
geom_text(aes(label=round(value,0)), hjust=0.5, vjust=-1.4,
colour="black", size = 6, angle=0, position = position_dodge(.9)) +
scale_fill_manual(values = c("#f56652", "#0060d2")) +
labs(x = "", y = "% of total") +
scale_y_continuous(guide = "prism_offset", trans = "reverse", breaks = c(0,60),labels = c(0,60)) +
theme_prism(base_line_size = 0.5, base_family = "sans", base_fontface = "plain") +
theme(axis.line.x = element_blank(), axis.line.y = element_line(), axis.ticks.x = element_blank(),
text = element_text(size = 12),
legend.title = element_blank(), legend.text = element_text(margin = margin(r = 10)), legend.position = "bottom",
plot.margin = unit(c(0.5,0.5,0,0), "cm")) +
guides(fill = guide_legend(reverse = FALSE))
